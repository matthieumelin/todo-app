[{"/home/matthieu/perso/websites/todo-app/src/index.js":"1","/home/matthieu/perso/websites/todo-app/src/reportWebVitals.js":"2","/home/matthieu/perso/websites/todo-app/src/App.js":"3","/home/matthieu/perso/websites/todo-app/src/firebase.js":"4","/home/matthieu/perso/websites/todo-app/src/components/Todo.js":"5"},{"size":500,"mtime":1610151003492,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1610146044470,"results":"8","hashOfConfig":"7"},{"size":2098,"mtime":1610151762772,"results":"9","hashOfConfig":"7"},{"size":490,"mtime":1610151269463,"results":"10","hashOfConfig":"7"},{"size":3283,"mtime":1610151571202,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"yuzvh5",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},"/home/matthieu/perso/websites/todo-app/src/index.js",[],"/home/matthieu/perso/websites/todo-app/src/reportWebVitals.js",[],["24","25"],"/home/matthieu/perso/websites/todo-app/src/App.js",[],"/home/matthieu/perso/websites/todo-app/src/firebase.js",[],"/home/matthieu/perso/websites/todo-app/src/components/Todo.js",["26","27"],"import React, { useState } from \"react\";\nimport {\n    List,\n    ListItem,\n    ListItemText,\n    ListItemAvatar,\n    Button,\n    Modal,\n    Input,\n} from \"@material-ui/core\";\nimport \"./Todo.css\";\nimport { db } from \"../firebase\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from '@material-ui/icons/Edit';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        position: \"relative\",\n        left: 400,\n        // position: \"center\",\n        width: 600,\n        backgroundColor: theme.palette.background.paper,\n        // border: \"2px solid #000\",\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n\n    button: {\n        width: 150,\n        // border: '2px solid #000',\n        margin: \"10px\",\n    },\n}));\n\nfunction Todo(props) {\n    const classes = useStyles();\n    const [open, setOpen] = useState(false);\n    const [input, setInput] = useState();\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const updateTodo = () => {\n        // update the todo with the new input\n        db.collection(\"todos\").doc(props.todo.id).set(\n            {\n                todo: input,\n            },\n            { merge: true }\n        );\n        setOpen(false);\n    };\n\n    return (\n        <>\n            <Modal open={open} onClose={(e) => setOpen(false)}>\n                <div className={classes.paper}>\n                    <h3>Update the Task</h3>\n                    <input\n                        placeholder={props.todo.todo}\n                        value={input}\n                        onChange={(Event) => setInput(Event.target.value)}\n                    />\n                    <Button\n                        variant=\"contained\"\n                        color=\"default\"\n                        onClick={updateTodo}\n                        className={classes.button}\n                    >\n                        Upload ‚úî\n          </Button>\n                </div>\n            </Modal>\n            <List className=\"todo__list\">\n                <ListItem>\n                    <ListItemAvatar></ListItemAvatar>\n                    <ListItemText primary={props.todo.todo} secondary=\"Uploaded Task ü§û \" />\n                </ListItem>\n                <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    onClick={(Event) =>\n                        db.collection(\"todos\").doc(props.todo.id).delete()\n                    }\n                    className={classes.button}\n                    startIcon={<DeleteIcon />}\n                >\n                    Delete\n        </Button>\n\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={(e) => setOpen(true)}\n                    className={classes.button}\n                    endIcon={<EditIcon>send</EditIcon>}\n                >\n                    Edit\n        </Button>\n\n                {/* <Button className=\"edit__btn\" onClick={e => setOpen(true)}>Edit</Button> */}\n                {/* <DeleteForeverIcon onClick={Event =>db.collection('todos').doc(props.todo.id).delete()}>‚ùåDelete</DeleteForeverIcon> */}\n            </List>\n        </>\n    );\n}\n\nexport default Todo;",{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":9,"column":5,"nodeType":"34","messageId":"35","endLine":9,"endColumn":10},{"ruleId":"32","severity":1,"message":"36","line":41,"column":11,"nodeType":"34","messageId":"35","endLine":41,"endColumn":21},"no-native-reassign",["37"],"no-negated-in-lhs",["38"],"no-unused-vars","'Input' is defined but never used.","Identifier","unusedVar","'handleOpen' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]